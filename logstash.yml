---
apiVersion: v1
kind: ConfigMap
metadata:
  name: logstash-configmap
  namespace: elasticsearch
  labels:
    component: logstash
data:
  logstash.yml: |-
    http.host: "0.0.0.0"
    path.config: /usr/share/logstash/pipeline
  logstash.conf: |-
    # all input will come from filebeat, no local logs
    input {
      beats {
        port => 5044
      }
    }
    ## some more advanced filtering and tagging of incoming kubernetes logs is done in logstash
    filter {
      if [type] == "kube-logs" {
        mutate {
          rename => ["log", "message"]
          add_tag => [ "pelias", "kubernetes" ]
        }
        date {
          match => ["time", "ISO8601"]
          remove_field => ["time"]
        }
        # all standard container logs files match a common pattern
        grok {
            match => { "source" => "/var/log/containers/%{DATA:pod_name}_%{DATA:namespace}_%{GREEDYDATA:container_name}-%{DATA:container_id}.log" }
            remove_field => ["source"]
        }
        # system services have a simpler log filename format that does not include namespace, pod names, or container ids
        grok {
            match => { "source" => "/var/log/hostlogs/%{DATA:container_name}.log" }
            add_field => { "namespace" => "kube-system" }
            remove_field => ["source"]
        }
      }
    }
    output {
        elasticsearch {
            hosts => [ "elasticsearch.elasticsearch:9200" ]
        }
    }
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: logstash
  namespace: elasticsearch
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: logstash
    spec:
      initContainers:
      - name: init-sysctl
        image: busybox:1.27.2
        command:
        - sysctl
        - -w
        - vm.max_map_count=262144
        securityContext:
          privileged: true
      containers:
      - name: logstash
        image: docker.elastic.co/logstash/logstash-oss:6.2.4
        ports:
        - containerPort: 5044
          name: beats
          protocol: TCP
        - containerPort: 9300
          name: transport
        volumeMounts:
          - name: config-volume
            mountPath: /usr/share/logstash/config
          - name: logstash-pipeline-volume
            mountPath: /usr/share/logstash/pipeline
        resources:
          limits:
            memory: 1000Mi
          requests:
            cpu: 500m
            memory: 300Mi
        livenessProbe:
          tcpSocket:
            port: transport
          initialDelaySeconds: 120
          periodSeconds: 30
          timeoutSeconds: 2
      volumes:
      - name: config-volume
        configMap:
          name: logstash-configmap
          items:
            - key: logstash.yml
              path: logstash.yml
      - name: logstash-pipeline-volume
        configMap:
          name: logstash-configmap
          items:
            - key: logstash.conf
              path: logstash.conf
---
kind: Service
apiVersion: v1
metadata:
  name: logstash
  namespace: elasticsearch
spec:
  selector:
    app: logstash
  ports:
  - protocol: TCP
    port: 5044
  type: NodePort